#!/bin/sh

# Setup for the check for filenames with non-ASCII characters
if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff-index --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.
This can cause problems if you want to work with people on other platforms.
To be portable it is advisable to rename the file.
If you know what you are doing you can disable this check using:
  git config hooks.allownonascii true
EOF
	exit 1
fi

# lints changed JavaScript and TypeScript
changed_js=$(git diff-index --cached --name-only $against | grep -E "(.*\.(js|mjs|ts|mts)|scripts/.*\.(js|mjs|ts|mts)|src/.*\.(js|mjs|ts|mts)|test/.*\.(js|mjs|ts|mts)|admin/.*\.(js|mjs|ts|mts)|admin/src/.*\.(js|mjs|ts|mts))$")
# /dev/null prevents eslint from checking everything
./node_modules/.bin/eslint ${changed_js:-/dev/null}
LINT_STATUS=$?
if [ "$LINT_STATUS" != "0" ]; then
  echo 'Fix the errors above, then use `git add` to restage all fixed files'
  exit $LINT_STATUS
fi

# lints changed HTML
changed_html=$(git diff-index --cached --name-only $against | grep -E "^src/.*\.html$")
# src/tokens.html prevents htmlhint from checking everything
node_modules/.bin/htmlhint ${changed_html:-src/tokens.html}
LINT_STATUS=$?
if [ "$LINT_STATUS" != "0" ]; then
  echo 'Fix the errors above, then use `git add` to restage all fixed files'
  exit $LINT_STATUS
fi

# runs all automated tests
npm run test:unit

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --
